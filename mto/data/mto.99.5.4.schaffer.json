{
    "title": "Review of Eleanor Selfridge-Field, <em>Beyond MIDI: The Handbook of Musical Codes</em> (Cambridge, Mass.:  MIT Press, 1997)",
    "date": "1999/09/01",
    "volume": "5",
    "issue": "4",
    "authors": [
        "Schaffer, John Wm."
    ],
    "abstract": "",
    "keywords": [
        "data",
        "formats",
        "notation",
        "music"
    ],
    "doi": "",
    "received": "",
    "pdf": "http://www.mtosmt.org/issues/mto.99.5.4/mto.99.5.4.schaffer.pdf",
    "author_info": [
        {
            "name": "John Wm. Schaffer",
            "university": "University of Wisconsin-Madison",
            "address": "College of Letters and Science, Humanities Building 3561, 455 North Park St., Madison, WI 53706",
            "email": "musicdir@vms2.macc.wisc.edu"
        }
    ],
    "citations": {},
    "footnotes": {},
    "paragraphs": [
        {
            "0": {
                "text": "",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "1": {
                "text": "[1] Since the days of the earliest electronic computers,\nmusicians have engaged them in a veritable love/hate\nrelationship. We seem to have little or no indifference towards\ncomputers. Indeed, individually we seem either to embrace them\nwith a passion or to shy away from anything concretely or\nrepresentationally related to them. I do not want to imply,\nhowever, that there are not gradations—layers so to speak—of\ninterest, particularly among the convert group (after all, that\nreally is the intended audience for this review). Here you will\nfind the pedagogues, the catalogers, the analysts, and the\ncognitive and artificial intelligence explorers to name but a\nfew. You will also find overlapping camps of those with an aural\nbent and those with a visual one. Of course, across all of these\nboundaries there exist degrees of involvement among respective\nmembers. In other words, there are “users” (e.g.,\nnon-programmers) and their are “doers” (e.g., programmers).",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "2": {
                "text": "[2] Beyond MIDI: The Handbook of Musical Codes is a compilation\nof reports and documents from numerous authors. The work, edited\nby Eleanor Selfridge-Field, Consulting Professor at the Center\nfor Computer Assisted Research in the Humanities at Stanford\nUniversity, is a book that is clearly aimed at the doers. In\nfact, it aims high enough to propel itself beyond many\n“apprentice doers”—this is not a work for the faint of heart. If\nyou happen to be one of the real “power doers,” however, it\nspeaks clearly and with an effective voice. At its most profound\nlevel, Beyond MIDI is a book that discusses the nuances and\nintricacies of computer-based musical descriptions, the languages\nand vehicles by which we are able to interact with or make\nobservations about the phenomenon known as “music.” At its\nsimplest level, it is an extremely valuable handbook for those\nwho wish to harness computers to facilitate such interactions. In\neither case, the work succeeds in conveying what is important to\nthe reader, partly because it is a book written by insiders for\ninsiders. It takes someone well versed in the complexities of\ncomputer programming—the “power doers”—to appreciate fully the\nprofound nature of the information being shared, and it is\nprecisely these sorts of professionals who have been engaged to\nsupply the information for the book. Included are such notable\npractitioners as Max Matthews, Stephen Dydo, Thomas Hall, Leland\nSmith, Donald Byrd, David Huron, and Walter Hewlett.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "3": {
                "text": "[3] This is not another MIDI programmer’s handbook, yet it gives\na surprisingly detailed and explanative summary of this language.\nIt lacks examples of many code models, yet is an effective\nexposition on how to represent music in a computer environment.\nThe book confronts us with a marvelous dichotomy: it is both\nincomplete, yet complete. It omits much, yet gives more than one\ncould hope for. It accomplishes what most well-written books\nshould but few actually do: it presents us with enough of the\nright information targeted at the appropriate audience and\npresented in such a way that it enables the reader to continue\nwhere the book leaves off. In this case, it empowers those of us\nwho are “doers” to propel ourselves into the status of “power\ndoers.” OVERVIEW",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "4": {
                "text": "[4] This work is actually an outgrowth of an initiative of the\nStudy Group on Musical Data and Computer Applications sponsored\nby the International Musicological Society, and co-chaired by\nWalter B. Hewlett and Selfridge-Field [xvii]. According to\nSelfridge-Field, the purpose of Beyond MIDI is “to provide a\ngeneral description, with encoded examples, of numerous ways of\nrepresenting music in the computer” (xv). Such an overtly terse\nstatement, while elegant in its simplicity, belies the\naccomplishments of the work. Her reasons for creating the\ncompilation are stated with significantly more zeal—a tone more\nbefitting the spirit of the book: Hundreds of codes for music have been developed. Most are\n     intentionally made invisible to users. Not so happily,\n     documentation about many musical codes is extremely scarce.\n     This scarcety impedes applications. It deprives many\n     potential users from investigating the relative merits of\n     different schemes for data representation. It thwarts\n     discussions of generalized representational systems. Worst\n     of all, it imprisons data sets within the confines of the\n     specific applications for which they were created. [xv]",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "5": {
                "text": "[5] As someone trained in computer programming, it was always\nstressed to me that a computer program is essentially a set of\ndata combined with a collection of means, or tools, for\nmanipulating that data effectively. At the heart of all good\nprograms is a well-developed, powerfully flexible data model: one\ncapable of supporting profound exploration and revelation, yet\nalso capable of expressing subtle nuances. Music, in whatever\nform it is perceived or explored, presents us with an extremely\ncomplex set of data that requires an extraordinary\nrepresentational model even to begin to capture its essence. No\none model can embody it all; instead, we must strive to solidify\nand implement those concepts necessary to meet our immediate\nneeds. Beyond MIDI attempts to do just that by offering us a\npastiche of numerous different models for accomplishing musical\nrepresentations. The work does not overtly attempt to be profound\nin what it offers. Instead, the editor reverts to a rather\napologetic tone when she states that the emphasis of the Handbook is intended to be on\n     practical concepts. While the Handbook cannot serve as a\n     complete reference for any one code, it is designed to\n     cover the basic features of pitch, duration, articulation,\n     dynamics, timbre, and other defining features of music. It\n     also describes the file organization for each code, existing\n     applications, data archives (where relevant), existing file\n     interchange provisions, published references, and sources of\n     further information [xvi]. Were this work nothing more than a set of simple documentations\nit might not merit the attention being given to it. And,\ndocumentation is essentially what it is. Yet, the nature of what\nit is being documented and the audience to whom it is being\naddressed empowers it with a profound sense of purpose: it is the\nappropriate information presented at the appropriate level of\ndetail to address the needs of a specific set of needy users. Nor\ndoes the book offer the reader a complete set of documentation,\ninstead it presents the user with a selective subset of\ninformation targeted at the already knowledgeable user. A word\nprocessor manual, for example, may utilize many of pages of\ndocumentation to explain just the basics of text selection to a\nnovice user. Yet, one page of appropriate information might\nunleash powerful nuances of macro creation to someone already\nwell versed in the topic. In other words, this book is both\nselective, yet capable of generating powerful insights. One could\neasily argue that the value of the work lies, not in the content\nfound within, but solely in the mind of the reader, a notion with\nwhich I would not totally disagree. The strength of this text,\ninstead, lies in its ability to enable the reader to infer, to\nspeculate, to resolve, to reconcile all of those loose\nassociations and half-understood concepts that can plague us\nincessantly without any easy recourse for resolution. CONTENT",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "6": {
                "text": "[6] As part of a rather selective approach to the amount of\ndetailed information about each code set discussed in the text,\nthe editor strives to emphasize those codes that are as\ncomprehensive as possible in their attempts to represent the\nbroadest spectrum of musical information. The lure of “total”\nrepresentation has now been pursued for roughly three decades.\nThis volume gives considerable recognition to those systems which\naim to provide the greatest degrees of completeness. Yet no one\ninvolved with the most competent of systems claims that any piece\nof music can be represented at the 100% level in all of its\nconceivable aspects. Every system makes sacrifices somewhere to\noptimize clarity of its preferred features [5].",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "7": {
                "text": "[7] Nonetheless, the work includes a considerably large body of\ncode examples spanning a broad array of formulaic approaches to\nsolving problems in the representation of musical data.\nSelfridge-Field begins by grouping most data models into four\ngeneral usage categories: those based on “sound or phonological\ncontext, the notation or graphical context of notation, the\nrational context of analytical parameters, and the semantic\ncontext of musical perception and understanding” (7). She goes on\nto state that the book explicitly concentrates on the first three\nof these. More specifically, she points out that the choice of\nmaterials presented in the book are aimed first at introducing\nthe reader to “the general subject of music representation,\nshowing how intended applications influence the kinds of\ninformation that are encoded” (20). Her second aim is “to present\na broad range of representation schemes, illustrating a wide\nvariety of approaches to music representation” (20). All of these\ndata models were then grouped rather arbitrarily into ten\ndifferent categories, each containing at least two sample\nschemes, while acknowledging that in some categories dozens of\nmodels were available to chose from. In nearly every case, the\nindividual models are documented by individuals closely\nassociated with those representational schemes. One exceptional\nfeature of the book is the mandated inclusion of several relevant\nmusical excerpts that are then coded as a working examples for\neach correlative chapter.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "8": {
                "text": "[8] Rather than discussing each model here, I present a listing\nof what is included. The very complex nature of each model\neffectively precludes encapsulating in a few words what has taken\nothers years to conceive and implement. The best solution I\nbelieve is the one presented in the book’s table of contents, and\nI choose here simply to recreate it as Figure 1 (contributing\nauthors are referenced in “[ ]”). Figure 1: Organization of Data Models Introduction describing musical information [Eleanor Selfridge-Field] Sound-Related Codes (1): MIDI MIDI [Walter Hewlett & Eleanor Selfridge-Field] MIDI Extensions NoTAMIDI (Meta Events) [Kiell Nordli] Expressive MIDI (Extension for Notation)\n                  [David Cooper, et. al.] MIDIPlus (Extension for Notation) [Walter B.\n \t\t  Hewlett] Augmented MIDI (Sound Control) [Max Matthews] Sound-Related Codes (2): Other Codes Csound [David Bainbridge] Music Macro Language [Toshiaki Matsushima] NeXT ScoreFile [David Jaffe] Conductor Score File (Radio Baton)[ Max Matthews] Musical Notation Codes (1): DARMS Its Dialects, and Its Uses [Eleanor Selfridge-Field] Note Processor Dialect [Stephen Dydo] A-R Dialect [Thomas Hall] Lute Tablature Extensions [Frans Wiering] Mensural Notation Extensions [Lynn Trowbridge] Musical Notation Codes (2): ASCII Representations Common Music Notation [Bill Schottstaedt] MuTEX, MusicTEX, and MusiXTEX [Werner Icking] Philip’s Music Scribe [Philip Hazel] SCORE [Leland Smith] Musical Notation Codes (3): Graphical-object Descriptions LIME [David Cottle and Lippold Haken] Nightingale Notelist [Donald Byrd] Musical Notation Codes (4): Braille Overview [Roger Firman] Common signs [Bettye Krolick and Sile O’Modhrain] Codes for Data Management and Analysis (1): Monophonic\n\tRepresentations Essen Associative Code [Helmut Schaffrath] Plaine and Easie Code [John Howard] Codes for Data Management and Analysis (2): Polyphonic\n   Representations Humdrum (Kern) [David Huron] MuseData [Walter B. Hewlett] Representations of Musical Patterns and Processes: Encoding of Compositional Units [Ulf Berggren] Score-Segmentation Approach to Analysis [Andranick\n\t  Tanguiane] Interchange Codes: HyTime and Standard Music Description Language [Donald\n\t  Sloan and Steven Newcomb] Notation Interchange File Format [Cindy Grande] Standard Music eXpression [Toshiaki Matsushima] Reflections: Beyond Codes: Issues of Musical Representations\n\t  [Eleanor Selfridge-Field] Afterward: Guidelines for New Codes [David Halperin] CONCLUSIONS",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "10": {
                "text": "[10] This work is amazingly free of any significant problems. The\ntext seems extremely accurate—at least as far as one can tell\nwith so much complicated data incorporated both in tables and\nwithin the text. With the exception of the last chapter, the text\nalso seems to be very well organized. I feel that the section\nentitled “Beyond Codes: Issues in Musical Representation” really\nbelongs with the opening introductory chapters of the book.\nSelfridge-Field offers us a brief, yet engaging, discussion about\nthe nature of codes: What attributes are essential?; How general\nvs. how specific should a code be?; etc. While one might see\nthese as logical extensions of the exploration of the preceding\n500+ pages of code documentation, it is probably unrealistic to\nthink that most readers will actually sit down and read their way\nthrough the entire book. After all, this work is more a powerful\nreference tool containing a compelling collection of data than a\n“compelling” story line. Yet, this final chapter does represent a\nfitting conclusion to the opening discussions and certainly\nshould be included as an integral part of the opening stages of\nthe work.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "11": {
                "text": "[11] Perhaps more problematic is the lack of a summary of the\nabbreviations used throughout the code-definition portions of the\nbook. This omission is a problem that will be more acutely felt\nby the “users” than by the “doers.” For example, most programmers\nare familiar with reading and interpreting hexadecimal codes and\nvariable symbols; yet most non-programmers, while perhaps\nsomewhat familiar with hexadecimal numbers, would not\nautomatically be able to infer the appropriate meaning in an\nunfamiliar context. Their appearance in code definitions absent\nof any explanation as to why they are being used and how they\nshould be interpreted within that context can generate\nsignificant confusion or even leave an example completely\nundecipherable to such a non-practitioner. For example, the\nsection on MIDI defines a pitch event as: PITCH [kkkkkkk: note# <n>] Unfortunately, no attempt is made to define the meaning of the\nvarious elements present in the definition. For example, kkkkkkk\nstands for the first seven bits of an eight-bit byte used to\nstore the integer representing a particular pitch. None of this\ninformation is explicitly offered as an explanation by the\nauthor—what I present here is just my informed interpretation. A\nfew pages later, the definition for a duration is given as: DURATION [00:00:00 or 00:00:00:00] This example is even more problematic, as the 00s are not a\ndirect computer representation as the k’s were in the previous\nexample. Here, each group of zeros stands respectively for bars,\nbeats, and fractions of a beat, or hours, minutes, seconds, and\nframes. The actual definition for how to represent that\ninformation in the computer does not appear until 15 pages later.\nFortunately, most of the code in the book is reasonably easy to\ndecode for someone with a fair amount of programming experience.\nAnd, in many respects, eliminating much of the explanation\nenables the authors to present the pertinent information more\nsuccinctly. What makes this text work so well for the “power\ndoer,” however, is precisely what keeps it from working for the\nnovice user.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "12": {
                "text": "[12] No single work can serve the multiple needs of every\npractitioner, and this book is no exception. If you are anywhere\nclose to considering yourself a “doer,” and if you have even the\nslightest inclination to explore the world of music with a\ncomputer, however, then having this text within easy reach is an\nabsolute must. There is no other source that comes close to\nmatching the breadth, quantity, and quality of information\namassed in this one work. Much of the information simply is not\navailable anywhere within easy reach. I must commend the editor\nand contributing authors for a splendid job of creating an\ninvaluable reference work.",
                "footnotes": [],
                "citations": []
            }
        }
    ],
    "mto": true,
    "category": "reviews",
    "source": "mto/raw/mto.99.5.4.schaffer.html",
    "data": "mto/data/mto.99.5.4.schaffer.json"
}