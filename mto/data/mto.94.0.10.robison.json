{
    "title": "Modifying Interval-Class Vectors of Large Collections\n        to Reflect Registral Proximity Among Pitches",
    "date": "1994/09/01",
    "volume": "0",
    "issue": "10",
    "authors": [
        "Robison, Brian"
    ],
    "abstract": "The twelve-tone operations of transposition and inversion reduce all 12-note collections to one set-class, all 11-note collections to one set-class, and all ten-note collections to one of six set-classes. Yet throughout this century, composers have organized large collections in different ways to produce distinctly characteristic intervallic content. I propose here a modified version of Allen Forte’s interval-class vector to preserve some indication of registral proximity among pitches, assigning fractional counts to intervals greater than six semitones in order to derive interval-class vectors which distinguish different sets of a given set-class.",
    "keywords": [
        "harmony",
        "set theory"
    ],
    "doi": "",
    "received": "",
    "pdf": "http://www.mtosmt.org/issues/mto.94.0.10/mto.94.0.10.robison.pdf",
    "author_info": [
        {
            "name": "Brian Robison",
            "university": "Music Department",
            "address": "Lincoln Hall, Cornell University, Ithaca, New York 14853",
            "email": "bcr2@cornell.edu"
        }
    ],
    "citations": {},
    "footnotes": {
        "FN1": {
            "text": "1. Specifically, these “saturated” set-classes are: 12–1 [12 12 12 12 12 6] 11–1 [10 10 10 10 10 5] 10–1 [9 8 8 8 8 4] 10–2 [8 9 8 8 8 4] 10–3 [8 8 9 8 8 4] 10–4 [8 8 8 9 8 4] 10–5 [8 8 8 8 9 4] 10–6 [8 8 8 8 8 5] Note that, among set-classes of cardinality 10, the vectors\nshow a higher value for the “excluded” pc pair (i.e. by\nreflexivity, the excluded pair removes only one instance\nof its own ic, but two instances of every other ic). 2. Steven Stucky, Lutoslawski and his music (Cambridge:\nCambridge University Press, 1981), 114–119. 3. Some of these collections arise from interval cycles\n(as in the chord of alternating fourths and tritones which\nrepeatedly appears in the first movement of his Turangalila-symphonie ), others from the inherent\nsymmetries of his modes of limited transposition (Messiaen: Technique de mon langage musical , Paris: A. Leduc, 1944.). 4. Two prominent early collections of limited adjacencies\nare the 12-note chords that accompany the deaths of the\ntitle characters in Alban Berg’s Wozzeck (ic’s 3 and 4,\nsymmetric) and Lulu (ic’s 1, 5, and 6, asymmetric). 5. Chapman, Alan.  “Some intervallic aspects of pitch-\nclass set relations.” Journal of music theory 25 (1981):\n275–290. 6. Morris, Robert. Composition with pitch classes:\nA theory of compositional design .  New Haven: Yale\nUniversity Press, 1987. 7. For the sake of simplicity, these examples assume\nparallel perspective in projection (i.e. no vanishing\npoint!).  Of course, the introduction of one or more\nvanishing points further multiplies the variety of possible\nprojections. 8. Because the system outlined by Forte in The structure\nof atonal music (New Haven: Yale University Press, 1973)\nhas become a lingua franca among theorists, it provides a\nvaluable framework in which to build.  Thus, the counting\nschemes outlined below all produce ic vectors of six values\nranging from [0 0 0 0 0 0] for the empty set-class to\n[12 12 12 12 12 6] for the complete aggregate with all 66\npossible intervals occurring in their most compact forms\n(due to duplication of pitch-classes). 9. Although these fractional counts resemble membership\nfunctions of fuzzy sets, as set forth by Lotfi Zadeh in his\narticle “Fuzzy sets,” Information and control 8 (1965),\npp. 338–353, I do not mean them to imply a reduced degree\nof ic membership for compound intervals!  Rather, they\ndenote degrees of membership in the fuzzy set of close\nintervals , summed by ic as six scalar cardinalities to\nproduce an ic vector.  By extension, the fractional vectors\ndo not imply reduced set-class membership for sets widely\ndispersed in register, but only lesser membership in the\nfuzzy set of closely-spaced sonorities .  For a lucid\nreview of basic concepts of traditional (“crisp”) set theory\nand fuzzy set theory, see George J. Klir and Tina A. Folger: Fuzzy sets, uncertainty, and information (Englewood\nCliffs: Prentice-Hall, 1988), 1–21. 10. e is the base of the system of natural logarithms,\napproximately 2.718 in value.  The choice of e as a basis\nfor these exponential schemes is purely arbitrary.\nEmpirical research in the perceived distances of compound\nintervals may suggest alternate decrement functions. 11. Here “dissonant” refers loosely to the acoustical\nphenomenon of critical bandwidth, corresponding to the\ncolloquial notion that a minor second is “crunchier” than a\nmajor seventh, and so on. 12. Thus, in order to preserve the bounds described in \nnote (7) above, in collections containing more than one\npitch of a given pc, the algorithm implemented in the Fraction program (Appendix 2) always chooses the more\ncompact form of a given pc pair, e.g. for the collection\n{C4,D4,B4,C5} under the linear scheme above, the ic vector\nis [1 1 .95 0 0 0]. 13. Messiaen, Technique de mon langage musical , Vol. 2, \nExx. 208, 209, 210.  I’ve transposed Messiaen’s Ex. 209\nso that it shares the same pitch classes with the\ncollections of Ex. 1a and 1d–1j. 14. That is, these two sonorities each (enharmonically)\ncontain fairly compact versions of ic3 (three minor thirds\nand one major sixth), vs. compound versions of ic1 (no minor\nseconds, two major sevenths, one minor ninth, and one major\nfourteenth). 15. Isaacson, Eric.  “Similarity of interval-class content\nbetween pitch-class sets: The IcVSIM function.” Journal of\nmusic theory 34 (1990), 1–28. Specifically, these “saturated” set-classes are:\n  \n\n  12–1\n  [12 12 12 12 12 6]\n\n\n  11–1\n  [10 10 10 10 10 5]\n\n\n  10–1\n  [9 8 8 8 8 4]\n\n\n  10–2\n  [8 9 8 8 8 4]\n\n\n  10–3\n  [8 8 9 8 8 4]\n\n\n  10–4\n  [8 8 8 9 8 4]\n\n\n  10–5\n  [8 8 8 8 9 4]\n\n\n  10–6\n  [8 8 8 8 8 5]\n\n\nNote that, among set-classes of cardinality 10, the vectors\nshow a higher value for the “excluded” pc pair (i.e. by\nreflexivity, the excluded pair removes only one instance\nof its own ic, but two instances of every other ic). Steven Stucky, Lutoslawski and his music (Cambridge:\nCambridge University Press, 1981), 114–119. Some of these collections arise from interval cycles\n(as in the chord of alternating fourths and tritones which\nrepeatedly appears in the first movement of his Turangalila-symphonie ), others from the inherent\nsymmetries of his modes of limited transposition (Messiaen: Technique de mon langage musical , Paris: A. Leduc, 1944.). Two prominent early collections of limited adjacencies\nare the 12-note chords that accompany the deaths of the\ntitle characters in Alban Berg’s Wozzeck (ic’s 3 and 4,\nsymmetric) and Lulu (ic’s 1, 5, and 6, asymmetric). Chapman, Alan.  “Some intervallic aspects of pitch-\nclass set relations.” Journal of music theory 25 (1981):\n275–290. Morris, Robert. Composition with pitch classes:\nA theory of compositional design .  New Haven: Yale\nUniversity Press, 1987. For the sake of simplicity, these examples assume\nparallel perspective in projection (i.e. no vanishing\npoint!).  Of course, the introduction of one or more\nvanishing points further multiplies the variety of possible\nprojections. Because the system outlined by Forte in The structure\nof atonal music (New Haven: Yale University Press, 1973)\nhas become a lingua franca among theorists, it provides a\nvaluable framework in which to build.  Thus, the counting\nschemes outlined below all produce ic vectors of six values\nranging from [0 0 0 0 0 0] for the empty set-class to\n[12 12 12 12 12 6] for the complete aggregate with all 66\npossible intervals occurring in their most compact forms\n(due to duplication of pitch-classes). Although these fractional counts resemble membership\nfunctions of fuzzy sets, as set forth by Lotfi Zadeh in his\narticle “Fuzzy sets,” Information and control 8 (1965),\npp. 338–353, I do not mean them to imply a reduced degree\nof ic membership for compound intervals!  Rather, they\ndenote degrees of membership in the fuzzy set of close\nintervals , summed by ic as six scalar cardinalities to\nproduce an ic vector.  By extension, the fractional vectors\ndo not imply reduced set-class membership for sets widely\ndispersed in register, but only lesser membership in the\nfuzzy set of closely-spaced sonorities .  For a lucid\nreview of basic concepts of traditional (“crisp”) set theory\nand fuzzy set theory, see George J. Klir and Tina A. Folger: Fuzzy sets, uncertainty, and information (Englewood\nCliffs: Prentice-Hall, 1988), 1–21. e is the base of the system of natural logarithms,\napproximately 2.718 in value.  The choice of e as a basis\nfor these exponential schemes is purely arbitrary.\nEmpirical research in the perceived distances of compound\nintervals may suggest alternate decrement functions. Here “dissonant” refers loosely to the acoustical\nphenomenon of critical bandwidth, corresponding to the\ncolloquial notion that a minor second is “crunchier” than a\nmajor seventh, and so on. Thus, in order to preserve the bounds described in \nnote (7) above, in collections containing more than one\npitch of a given pc, the algorithm implemented in the Fraction program (Appendix 2) always chooses the more\ncompact form of a given pc pair, e.g. for the collection\n{C4,D4,B4,C5} under the linear scheme above, the ic vector\nis [1 1 .95 0 0 0]. Messiaen, Technique de mon langage musical , Vol. 2, \nExx. 208, 209, 210.  I’ve transposed Messiaen’s Ex. 209\nso that it shares the same pitch classes with the\ncollections of Ex. 1a and 1d–1j. That is, these two sonorities each (enharmonically)\ncontain fairly compact versions of ic3 (three minor thirds\nand one major sixth), vs. compound versions of ic1 (no minor\nseconds, two major sevenths, one minor ninth, and one major\nfourteenth). Isaacson, Eric.  “Similarity of interval-class content\nbetween pitch-class sets: The IcVSIM function.” Journal of\nmusic theory 34 (1990), 1–28. Return to beginning Copyright Statement Copyright © 1994 by the Society for Music Theory. All rights reserved. [1] Copyrights for individual items published in Music Theory Online ( MTO ) \nare held by their authors. Items appearing in MTO may be saved and stored in electronic or paper form, and may be shared among individuals for purposes of \nscholarly research or discussion, but may not be republished in any form, electronic or print, without prior, written permission from the author(s), and advance \nnotification of the editors of MTO. [2] Any redistributed form of items published in MTO must include the following information in a form appropriate to the medium in which the items are \nto appear: This item appeared in Music Theory Online in [VOLUME #, ISSUE #] on [DAY/MONTH/YEAR]. It was authored by [FULL NAME, EMAIL ADDRESS], with whose written \npermission it is reprinted here. [3] Libraries may archive issues of MTO in electronic or paper form for public access so long as each issue is stored in its entirety, and no access fee \nis charged. Exceptions to these requirements must be approved in writing by the editors of MTO, who will act in accordance with the decisions of the Society \nfor Music Theory. This document and all portions thereof are protected by U.S. and international copyright laws. Material contained herein may be copied and/or distributed for research \npurposes only. Return to beginning Prepared by Cynthia Gonzales and Rebecca Flore, Editorial Assistants",
            "citations": []
        }
    },
    "paragraphs": [
        {
            "0": {
                "text": "",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "1": {
                "text": "[1] The following work-in-progress attempts to bridge an\nanalytic gap between order and disorder: between symmetric\npitch matrices or interval cycles on the one hand, and\nasymmetric, all-interval structures (often labeled as\n“ad hoc”) on the other.  Although this discussion treats\nonly large collections, the technique proposed is\nsufficiently general to apply to sets of any cardinality.\nThe calculation of modified interval-class (ic) vectors\nfor individual pitch sets (as opposed to pitch-class sets)\nrequires computer implementation; Appendix 2 lists the\nstructured BASIC program used to generate the ic vectors\ngiven in Appendix 1. Sets and Set-Classes",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "2": {
                "text": "[2] Pitch-class (pc) set theory provides powerful\nabstractive tools for relating pitch collections by\noperations such as transposition and inversion.  However,\nthese same operations reduce all 12-note collections to one\nset-class, all 11-note collections to one set-class, and all\nten-note collections to one of six set-classes distinguished\nby the interval-class of the excluded pc pair. (1) Especially when expssed as chords in close or relatively\neven spacing, such large collections often do not lend\nthemselves to perceptually clear segmentation into subsets\nwith more distinctive ic vectors.",
                "footnotes": [
                    "FN1"
                ],
                "citations": []
            }
        },
        {
            "3": {
                "text": "[3] Throughout this century, composers have organized large\ncollections in different ways to produce distinctly\ncharacteristic intervallic content.  These range from the\nconsistent use of one or two ic’s between vertically\nadjacent chord-tones, especially in vertically symmetrical\narrangement, as in the music of the late Witold\nLutoslawski (2) Olivier Messiaen (3) , and others (4) , to\n“all-interval” constructions, typically asymmetrical, as is\noften the case in verticalizations of 12-tone rows.",
                "footnotes": [
                    "FN2",
                    "FN3",
                    "FN4"
                ],
                "citations": []
            }
        },
        {
            "4": {
                "text": "[4] pviously proposed functions which distinguish\ndifferent members of a given set-class, such as Chapman’s\n“above-bass” ic vector (5) and Morris’s INT(n) function (6) ,\nprovide detailed information about relationships among\npitches; however, as set cardinality increases, this detail\nproliferates geometrically to become unwieldy in practice. A Geometric Analogy",
                "footnotes": [
                    "FN5",
                    "FN6"
                ],
                "citations": []
            }
        },
        {
            "5": {
                "text": "[5] Many of the difficulties described above result from the\nconventional mapping of pitch space to pitch-class space, by\nwhich one completely collapses the helix of the former onto\nthe circle of the latter.  However, for most objects of\ndimension D, one can choose among multiple projections to a\nspace of dimension D-1.  For example, a cube can project\nonto a plane as any of the following: a single square, two intersecting squares, with corresponding sides\nparallel and corresponding vertices connected, or a regular hexagon with opposing vertices connected. (7)",
                "footnotes": [
                    "FN7"
                ],
                "citations": []
            }
        },
        {
            "6": {
                "text": "[6] Each repsentation has its merits and limitations.  The\nfirst pserves right angles and equal lengths of some edges,\nbut effectively obscures the original’s three-dimensional\ncharacter.  The second pserves all parallelisms and most\nangles and lengths, but distorts others.  The third\npserves all parallelisms and repsents all edges as equal\nin length, but distorts all angles (some become 60 degrees,\nothers 120 degrees).",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "7": {
                "text": "[7] Returning to the helical model of the pitch continuum,\nthere are likewise several possible approaches.  Viewed from\nthe side, the helix appears as a sinusoid.  This sinusoidal\nprojection pserves registral position but distorts\nrelative distances (e.g. some semitones appear longer than\nothers).  As mentioned pviously, the circular projection\npserves interval-class relationships but eliminates\nall information regarding registral position. Interval-Class Vectors with Fractional Values",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "8": {
                "text": "[8] I propose here a modified version of Allen Forte’s ic \nvector (8) which provides some indication of registral\nproximity among pitches; in the geometric analogy above,\nit corresponds roughly to viewing the helix from above, but\nwith some element of depth perception.  By assigning\nfractional counts to intervals greater than six semitones,\nwe can derive ic vectors which distinguish different\nvoicings of any given pc collection. (9)",
                "footnotes": [
                    "FN8",
                    "FN9"
                ],
                "citations": []
            }
        },
        {
            "9": {
                "text": "[9] Within each ic, the smallest interval receives a value\nof one;  successively larger intervals are counted at\nsuccessively smaller values, as shown below for three\ndecrement schemes: one linear, one moderately exponential,\nand one strongly exponential.  The linear scheme uses a\nsteady decrement of .05, which maintains non-zero values\nfor intervals within a limit of ten octaves (corresponding\nto the conventional range of human hearing).  The\nexponential schemes are based on reciprocals of e (10) raised to 1/5 and 1/2 the index of transposition (see table\nbelow).  In all of these, the conventional ic vector is\ntaken as expssing dissonant maxima (11) , which the\ncomposer can emphasize or attenuate by means of registral\ndisposition. (12) Fractional interval counts -------- Decrement schemes ------- Interval                   (a)         (b)         (c)\n   in        Index of     Linear    Moderately   Strongly\nsemitones    transpos.                 exp.        exp.\n----------  ----------  ----------  ----------  ----------\n  1 -  6         0         1.0         1.0         1.0\n  7 - 12         1          .95         .819        .607\n 13 - 18         2          .9          .670        .368\n 19 - 24         3          .85         .549        .223\n 25 - 30         4          .8          .449        .135\n 31 - 36         5          .75         .368        .082\n 37 - 42         6          .7          .301        .050\n 43 - 48         7          .65         .247        .030\n   etc.         etc.       etc.        etc.        etc. Variation Sets Example 1 . Selected voicings of collection 8–24 [4 6 4 7 4 3] (click to enlarge) Example 2 . Selected voicings of collection 12–1 [12 12 12 12 12 6] (click to enlarge)",
                "footnotes": [
                    "FN10",
                    "FN11",
                    "FN12"
                ],
                "citations": []
            }
        },
        {
            "10": {
                "text": "[10] Example 1 provides ten different voicings of 8-24,\ndisplaying varying degrees of symmetry, varying numbers\nof ic’s as adjacencies, and varying ic’s emphasized as\nadjacencies.  The first three are Messiaen’s accord de\nresonance and two of its inversions. (13) 1d and 1e\nemphasize ic’s 1 and 2; 1f emphasizes perfect fourths,\nwhile 1g manifests augmented triads in close spacing.\n1h, 1i, and 1j psent several all-interval constructions.\nFor 1a and 1c, the fractional ic vectors (Appendix 1:\nTables 1a, 1b, 1c) reflect the tertial structure’s relative\nemphasis by proximity of ic3 over ic1. (14) Like\nconventional vectors, they fail to distinguish 1a from 1c.\nHowever, unlike conventional vectors, and unlike Chapman’s\nand Morris’s functions, they do distinguish between 1d and\n1e, which contain identical vertical sequences of\npitch-classes.",
                "footnotes": [
                    "FN13",
                    "FN14"
                ],
                "citations": []
            }
        },
        {
            "11": {
                "text": "[11] The exponential schemes psent more dramatic\ndistinctions than linear ones, as the fractional ic vectors\n(Appendix 1: Tables 2a, 2b, 2c) for the 12-note sonorities\nin Example 2 illustrate.  Again, the voicings vary in regard\nto symmetry and restriction of ic’s as adjacencies.  Note\nthat the greater decrements for highly compound intervals\nproduce a wider range of possible values in any given\nposition in the vector.  For example, compare the ic6 values\nin the vectors for the first five sonorities alone\n(vertically symmetrical 12-note chords with only ic3 and ic5\nas adjacencies, spanning comparable registers).  The linear\nscheme produces values between 5 and 6, the moderately\nexponential scheme produces values between 3.28 and 6,\nand the strongly exponential scheme produces values between\n1.57 and 6.  Fractional vectors derived with strongly\nexponential decrements thus approach a vector calculated by\ncounting adjacencies alone. Preliminary Implications for Analysis",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "12": {
                "text": "[12] To ensure meaningful comparison, it’s important that an\nanalyst apply either the same scheme or closely comparable\nones to all collections in a given context.  Conservative \nlinear decrement schemes distinguish different voicings of\na given pc-set, but their vectors are still closer to each\nother than they are to those of other pc-sets, and even to\nthose of voicings of other sets which display highly similar\nadjacency structures.  In contrast, the exponential schemes\nproduce vectors in which the intervallic cardinality (i.e.\nthe sum of the terms of the ic vector) of a chord\ndistributed over a wide range approximates that of a much\nsmaller conventional collection.  In extreme cases, pitch\nsets which belong to different pc-set-classes but which\nshare certain adjacency structures could generate vectors\nwhich are closer to each other than to those of other\nmembers of their own pc-set-classes, as measured by\nnumerical methods such as Isaacson’s IcVSIM function. (15)",
                "footnotes": [
                    "FN15"
                ],
                "citations": []
            }
        },
        {
            "13": {
                "text": "[13] However, I do not psume to suggest any standard\nscheme, since the pferred size and nature of intervallic\ndecrements will vary among individuals and among\nrepertoires.  To return to the geometric analogy, these\nvariations correspond to differences among individual\nperceptions of the relative spacing of the helix’s coils and\nthe resulting degree to which aural “perspective” attenuates\nthe dissonance of highly compound intervals.  In addition,\naspects of timbre and orchestration often motivate different\nperceptual distances; consider the difference in relative\ndissonance of any one of the sonorities above as performed\non a harpsichord, clavichord, piano, or organ, or as played\nby bowed strings, muted, ppp , or brass choir, fff .\nAs with any other feature of analysis, one should note\nexplicitly the information which one chooses to sacrifice\nfor the sake of brevity and clarity. Appendix 1: Tables Table 1a Fractional interval-class vectors of\nthe 10 voicings of 8–24 in Example 1\n(linear decrements) 4       6       4       7       4       3 a       3.6     5.65    3.95    6.6     3.75    2.9 b       3.7     5.6     4       6.5     3.7     3 c       3.6     5.65    3.95    6.6     3.75    2.9 d       4       5.95    4       6.9     3.9     3 e       3.8     5.35    3.7     5.8     3.2     2.5 f       3.8     5.1     3.3     6.0     4       3 g       3.5     5.45    3.5     6.9     3.5     2.8 h       3.7     5.65    3.8     6.3     3.6     2.7 i       3.35    5.05    3.6     6.2     3.8     2.5 j       3.75    5.4     3.55    6.3     3.75    2.9 ============================== Table 1b Fractional interval-class vectors of\nthe 10 voicings of 8-24 in Example 1\n(moderately exponential decrements) 4       6       4       7       4       3 a       2.71    4.80    3.82    5.71    3.19    2.67 b       2.98    4.71    4       5.29    3.10    3 c       2.71    4.80    3.82    5.71    3.19    2.67 d       4       5.82    4       6.64    3.64    3 e       3.34    4.26    3.01    3.75    1.86    1.57 f       3.27    3.49    2.00    4.09    4       3 g       2.44    4.20    2.54    6.64    2.59    2.34 h       3.04    4.80    3.37    4.85    2.86    2.12 i       2.24    3.49    2.86    4.67    3.34    1.75 j       3.16    4.20    2.67    4.85    3.19    2.67 ==================== Table 1c Fractional interval-class vectors of\nthe 10 voicings of 8–24 in Example 1\n(strongly exponential decrements) 4       6       4       7       4       3 a       1.57    3.56    3.61    4.57    2.44    2.37 b       1.95    3.57    4       3.53    2.45    3 c       1.57    3.56    3.61    4.57    2.44    2.37 d       4       5.61    4       6.21    3.21    3 e       2.74    3.13    2.10    1.72    .67     .64 f       2.43    1.84    .72     2.00    4       3 g       1.18    2.54    1.48    6.21    1.67    1.74 h       2.20    3.56    2.83    3.16    2.06    1.50 i       1.16    2.10    2.06    3.02    2.74    1.19 j       2.34    2.79    1.73    3.16    2.44    2.37 ============================== Table 2a Fractional interval-class vectors\nof the 15 voicings of 12-1\nprovided in Example 2\n(linear decrements) 12      12      12      12      12       6 a       10.35    9.7    10.55   11.2    10.35    5.0 b       10.3    10.5    11.05   10.4    10.8     5.4 c       10.45    9.7    10.85   11.2    10.55    5.0 d       10.65   10.1    11.05   11.2    10.75    5.2 e       10.5    10.4    11.85   10.4    10.5     6 f       10.55   10.1    10.75   11.2    11.05    5.2 g       10.4    10.55   10.85   10.5    11.05    5.5 h       10.75   10.1    10.65   10       9.45    4.8 i       10.15    9.7    10.75   11      10.45    5 j       10.5    10.6    11.85   10.6    10.5     6 k       10.55   10.7    11.1    10.8    11.05    5.3 l       10.95   10.85   10.9    10.6    11       5.6 m        9.10    8.90    9.15    9.15    8.9     4.4 n       10.5    10.65   11.25   10.6    10.7     5.7 o       10.65   10.6    11.1    10.55   10.5     5.4 ============================== Table 2b Fractional interval-class vectors\nof the 15 voicings of 12-1\nprovided in Example 2\n(moderately exponential decrements) 12      12      12      12      12       6 a        7.30    5.80    8.02    9.23    9.00    3.28 b        7.48    7.41    9.26    7.59    8.40    4.24 c        7.53    5.80    8.99    9.23    8.00    3.28 d        7.97    6.58    9.45    9.23    8.39    3.80 e        7.66    7.20   11.46    7.27    7.67    6 f        7.77    6.58    8.45    9.23    9.36    3.80 g        7.26    7.77    9.00    7.65    8.96    4.57 h        8.47    6.58    8.45    7.15    5.66    2.70 i        6.79    5.92    8.79    8.88    7.53    3.50 j        7.38    7.81    11.46   7.27    7.67    6 k        7.57    8.21    9.26    8.41    9.55    3.80 l        8.77    8.60    8.85    7.83    9.07    4.79 m        7.97    8.00    8.45    7.70    7.30    3.80 n        7.75    7.81    9.86    7.92    8.35    5.12 o        7.88    7.96    9.53    7.76    7.84    4.42 ============================== Table 2c Fractional interval-class vectors\nof the 15 voicings of 12-1\nprovided in Example 2\n(strongly exponential decrements) 12      12      12      12      12       6 a        3.95    2.35    5.58    6.32    7.52    1.57 b        4.65    3.85    7.40    4.64    5.74    3.01 c        4.30    2.35    7.26    6.32    5.62    1.57 d        4.86    2.91    8.04    6.32    5.90    2.54 e        4.54    3.55   10.82    3.86    4.68    6 f        4.73    2.91    6.15    6.32    7.58    2.54 g        3.76    4.63    7.36    4.64    6.19    3.64 h        5.75    2.91    6.65    4.47    2.55     .81 i        3.20    2.53    7.08    6.36    4.28    2.37 j        3.69    4.63   10.82    4.82    4.09    6 k        4.08    5.51    7.15    5.48    8.22    1.97 l        6.12    6.04    6.77    4.62    6.91    3.87 m        4.86    5.02    6.40    4.78    4.74    2.54 n        4.78    4.47    8.41    4.87    5.94    4.50 o        4.62    5.06    7.94    4.73    5.17    3.55 Appendix 2: The FRACTION Program DECLARE SUB EnterPitches ()\nDECLARE SUB FractionalCounts ()\nDECLARE SUB ShowVector () DIM SHARED Quant\nDIM SHARED IntClass DIM SHARED PitchArray(3, 30)\n  ‘Thirty is an arbitrary value, selected because\n  ‘  BASIC does not allow matrices of variable dimension.\n  ‘If analyzing collections of more than 30 pitches,\n  ‘  substitute a larger value in this dimension statement. DIM SHARED IcMatrix(12, 6) DEF fnPitchClassOrder (p, q) ‘This function enables the FractionalCount routine\n  ‘  to assign fractional counts to their proper positions\n  ‘  in the interval-class matrix. IF IntClass = 6 THEN\n    SELECT CASE p\n      CASE IS < q\n        fnPitchClassOrder = p\n      CASE IS > q\n        fnPitchClassOrder = q\n      END SELECT\n    EXIT DEF\n  END IF\n  SELECT CASE p\n    CASE IS = (q + IntClass) MOD 12\n      fnPitchClassOrder = q\n    CASE ELSE\n      fnPitchClassOrder = p\n  END SELECT\nEND DEF ‘Program Fraction ‘This program calculates interval-class vectors\n  ‘  using fractional interval-class counts\n  ‘  to reflect emphasis by registral proximity. DO\n    CLEAR\n    CALL EnterPitches\n    CALL FractionalCounts\n    CALL ShowVector\n    PRINT “      ”\n    INPUT “Process another collection”; Response$\n      IF Response$ = “n” THEN EXIT DO\n  LOOP\nEND SUB EnterPitches\n  ‘This routine accepts pitch data as ordered pairs\n  ‘  of pitch-class (in integer notation)\n  ‘  and register (according to the ASA scheme).\n  ‘It then converts each pair to a position\n  ‘  for calculating intervals.\n  CLS\n  INPUT “Enter the number of pitches in the collection: ”; Quant\n  PRINT “Enter each pitch as an ordered pair (pitch-class, register)”\n  FOR i = 1 TO Quant\n    PRINT “  Pitch No.”; i;\n    INPUT PitchArray(1, i), PitchArray(2, i)\n    PitchArray(3, i) = 12 * PitchArray(2, i) + PitchArray(1, i)\n  NEXT i\nEND SUB SUB FractionalCounts ‘This routine calculates intervals and assigns their\n  ‘  fractional counts to an interval-class matrix. FOR v = 1 TO Quant - 1\n    FOR w = v + 1 TO Quant\n      Interval = ABS(PitchArray(3, v) - PitchArray(3, w))\n      IntClass = Interval MOD 12\n      Index = 2 * ((Interval - IntClass) / 12)\n        IF IntClass > 6 THEN\n          IntClass = 12 - IntClass\n          Index = Index + 1\n        END IF\n      Delta = Index * .05\n      Fraction = 1 - Delta\n  ‘The above two lines implement the linear decrement\n  ‘  scheme discussed in the article text.\n  ‘For moderately exponential decrements, replace them\n  ‘  with the single line ‘   Fraction = 1/(2.718281828# ^ (Index/5)) ‘For strongly exponential decrements, replace them\n  ‘  with the single line ‘   Fraction = 1/(2.718281828# ^ (Index/2)) r = fnPitchClassOrder(PitchArray(1, v), PitchArray(1, w))\n        IF Fraction > IcMatrix(r + 1, IntClass) THEN\n          IcMatrix(r + 1, IntClass) = Fraction\n        END IF\n    NEXT w\n  NEXT v\nEND SUB SUB ShowVector ‘This routine sums the fractional counts for each\n  ‘  interval-class, producing the fractional IcVector. PRINT “Fractional IcVector = ”;\n  DIM sum(6)\n  FOR m = 1 TO 6\n    sum(m) = 0\n    FOR n = 1 TO 12\n      sum(m) = sum(m) + IcMatrix(n, m)\n    NEXT n\n    PRINT sum(m);\n  NEXT m\nEND SUB",
                "footnotes": [],
                "citations": []
            }
        }
    ],
    "mto": true,
    "category": "articles",
    "source": "mto/raw/mto.94.0.10.robison.html",
    "data": "mto/data/mto.94.0.10.robison.json"
}