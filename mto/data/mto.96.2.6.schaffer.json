{
    "title": "Review of Peter Castine’s <i>Set Theory Objects: Abstractions for Computer-Aided Analysis and Composition of Serial and  Atonal Music</i>",
    "date": "1996/09/01",
    "volume": "2",
    "issue": "6",
    "authors": [
        "Schaffer, John Wm."
    ],
    "abstract": "Set Theory Objectsexplores the process of developing a computer program for assisting in the composition and analysis of post-tonal music. The author surveys the set-theoretical literature, and deals with various issues related to the design, development, and implementation of such a program. Included are tables detailing formal definitions for most set-theoretical functions.",
    "keywords": [
        "atonality",
        "computers",
        "set theory",
        "serialism",
        "Castine"
    ],
    "doi": "",
    "received": "",
    "pdf": "http://www.mtosmt.org/issues/mto.96.2.6/mto.96.2.6.schaffer.pdf",
    "author_info": [
        {
            "name": "John Wm. Schaffer",
            "university": "University of Wisconsin-Madison",
            "address": "School of Music, 455 N. Park St., Madison, WI 53706",
            "email": "jwschaff@facstaff.wisc.edu"
        }
    ],
    "citations": {
        "forte_1973": "Forte, Allen. The Structure of Atonal Music . New Haven: Yale University Press, 1973.",
        "harris_1973": "Harris, Craig R.  “Computer Programs for Set-Theoretic and Serial Analysis of Contemporary Music.” Ph.D. Dissertation, Eastman School of Music, 1973.",
        "harris_and_brinkman_1987": "Harris, Craig R. and Alexander R. Brinkman. Computer program for Unix and MS-DOS. Vers. 1.0.  Rochester, Bitwise Music, 1987.",
        "morris_1987": "Morris, Robert. Composition with Pitch-Classes . New Haven: Yale University Press, 1987.",
        "rahn_1980": "Rahn, John. Basic Atonal Theory . New York: Schirmer Books, 1980.",
        "schaffer_1988": "Schaffer, John. “Review of CMAP: Contemporary Music Analysis Package .” Integral 2 (1988): 201–214."
    },
    "footnotes": {},
    "paragraphs": [
        {
            "0": {
                "text": "Table of Contents 1. Contents 2. Group I: Introduction & Overview (Chapters 1 and 3) 3. Group II: The Computer Program (Chapters 4–6, Appendix C) 4. Group III: Set Theory And Serialism (Chapter 2, Appendices A–B) 5. Conclusions 1. Contents",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "1.1": {
                "text": "[1.1] Peter Castine’s Set Theory Objects: Abstractions for\nComputer-Aided Analysis and Composition of Serial and Atonal Music (hereafter referred to as STO) actually represents several texts in\none.  From the author’s straightforward discussion of set-theoretical\nprinciples to his fascinating look into the process of developing a\npowerful computer tool for assisting composers or theorists in the\nmanipulation of these set-theoretical operations, the book offers both\na broad and informative look into the complex world of\ncross-disciplinary study in significantly different domains, while at\nthe same time suffering from the difficulties of trying to place two\nhats on the same figurative hook.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "1.2": {
                "text": "[1.2] STO (essentially a reprint of Castine’s Ph.D. Dissertation in\ncommunications science and musicology from the Technical University\nBerlin, 1994) is divided into six chapters with three additional\nappendices covering several rather discrete, yet interlaced, topics.\nThe first and third chapters offer a rather brief, yet interesting,\noverview of the myriad issues—both historic and current—that the\nauthor dealt with in developing his computer project. The second\nchapter offers a selectively-detailed overview of set-theoretical\nconcepts, enhanced by two appendices presenting a complete set-class\ntable and a compilation of formal definitions and theorems.  The last\nthree chapters present a rather detailed, yet incomplete, journey\nthrough the actual process of conceptualizing, defining, refining, and\nimplementing a Macintosh-based computer program.  A final appendix\noffers a limited set of programming definitions, primarily useful for\nthose “hard-core” programmers intent on understanding the most\nfundamental underlying design principles of the project.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "1.3": {
                "text": "[1.3] While Castine is to be lauded for undertaking such a\nmultifaceted project, any real attempts on his part to integrate these\nmaterials into a cohesive work appear to be absent.  As happens all\ntoo frequently in many dissertations, Castine appears simply to have\navoided the issue by offering his reader a collection of six\nrelatively discrete chapters, which, upon closer examination, actually\ndivided rather cleanly into three rather self-contained groups. This\nobservation is not intended to diminish Castine’s work, but finding\nvalue from STO demands that the reader treat the work as two very\ndifferent texts, bound together for convenience under one cover. For\nmost readers their interest in the work most likely will lie in one or\nthe other of the two camps, relinquishing the composite text primarily\nto those of us similarly involved in melding computer technology with\nmusical inquiry.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "1.4": {
                "text": "[1.4] Having said all this, a more substantial look at each of the\ncomponent chapters of the book clearly is in order.  I have chosen\nhere, however, not to present the discussion in chapter order, but\nrather to base my discourse around chapters sharing related content. 2. Group I: Introduction & Overview (Chapters 1 and 3)",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "2.1": {
                "text": "[2.1] Castine, in his rather brief (six pages) introductory chapter,\nbegins interestingly enough by laying out quite clearly just what he\nbelieves STO is not about.  He writes that, while “it had been [his]\nintention to include a ‘critical evaluation’ of set theoretic methods\nand their application to music analysis,” as work on the project\nprogressed he became acutely aware that inclusion of such a discussion\n“would be of only marginal interest, since the usefulness of set\ntheory has been, frankly, discussed to death” (p. 16).  Castine also\nwants his readers to be very aware of his own self-imposed limits\nregulating the design and function of his computer program when he\nstates that This [work does not represent] an attempt to create a program to\nanalyze music without human intervention.  Indeed, the fields of\ncomputer science (in general) and artificial intelligence (in\nparticular) have made great strides [and computer programs\npotentially] could produce interesting or even valuable results.\nThere are, however, several reasons why this path was not pursued. . . . [One of these reasons is] aesthetic and philosophical: I am not\ninterested in trying to replace the human being in the musical\nprocess; I am interested in giving him tools to allow him to\nconcentrate on his work while making the mechanics of that work\neasier (p. 17).",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "2.2": {
                "text": "[2.2] The author is also concerned that we understand his intended\nscope and limitations regarding the set-theoretical tools chosen for\nintegration into his work.  Castine’s project was inspired almost\nentirely by his desire to expand and enhance an earlier set of\ncomputer programs, Contemporary Music Analysis Package (CMAP),\ndeveloped by Craig Harris and Alexander Brinkman (1987) for MS-DOS and\nUnix-based computers.  While Castine states clearly that “there are\nsignificant differences between the work done by Brinkman and Harris\nand mine, and in certain aspects my objectives have been diametrically\nopposed to those originally presented in Harris’s dissertation,” he\nspecifically sets out to document the development of a program that\nwould “provide (at least) the functionality, flexibility, and speed as\nthe original version of CMAP in a form that would be considerably\neasier to use, that would be available to a far larger number of\nmusicians” (p. 19).",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "2.3": {
                "text": "[2.3] As part of his rationale for undertaking this project, Castine\nsets out in chapter three to survey other such projects.  By\nconstraining himself, however, to those programs “whose authors have\nmade an effort to disseminate their work beyond an immediate circle of\ncolleagues and students” (p. 76), Castine severely restricts his survey\nto less than a half-dozen programs, of which only CMAP is privileged\nwith any significant discussion.  Given Castine’s belief, however,\nthat “None of the programs available for Macintosh provide the\nflexibility nor comprehensiveness of CMAP” (p. 91), this shortcoming is\nat least rationalized. 3. Group II: The Computer Program (Chapters 4–6, Appendix C)",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "3.1": {
                "text": "[3.1] Castine’s discussion of the development of his computer program\nencompasses the largest portion of the book, spanning three chapters\ntotalling seventy pages.  It is perhaps most likely the fourth chapter\n(Designing User-Oriented Software for Set Theory) from which the\nreader will gain the most benefit.  Castine devotes over thirty pages\nto exploring and detailing solutions for what many would consider the\nmost important aspect of any useful program: the user interface.  The\nauthor is careful to consider such factors as the historical nature of\nthe problem, the target audience, the purposeful definition of\nspecific tasks, and the overall basic design of the user interface.\nCastine’s discussions are both thorough and insightful.  He clearly\nknows his topic and has put a great deal of energy into creating\nelegant and useful solutions for typical interface problems.  The\nauthor’s solution for this project is elegant and simple: he opts for\nthe use of an “analytic scratchpad,” a program window based on a\nspreadsheet-like metaphor that offers a very powerful and simple way\nto manage a constantly varying number of music objects (sets) linked\nby any myriad number of different operational relationships.  Being\nable to place sets into cells anywhere on the scratchpad, and then to\nbe able to apply various set-theoretical operation to either\nindividual sets or combination of sets, clearly allows for a wide\nrange of possible analytical paradigms and working methodologies.\nCastine offers a solution somewhat analogous to a piece of scratch\npaper with a built in analytical calculator that does not require the\nuser to push many buttons to make it work—the solution is so \nstraightforward and basic as to have eluded any number of programmers for\nquite some time.  This chapter definitely should be read and digested\nby any programmer even thinking of undertaking such a project.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "3.2": {
                "text": "[3.2] The remaining two chapters, while offering some valuable\ninsights, do not really carry through the informational richness\npresented in chapter four.  Chapter five does offer an interesting\ntriptych of the process of actually implementing the program.  In the\nabsence of any program code, or charts diagramming some of the basic\nfunctionings and design considerations of the program, the materials\npresented at best can offer little more than a taste of how this\nundertaking unfolds at select points throughout the development\nprocess.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "3.3": {
                "text": "[3.3] Chapter six details those things that Castine feels still need\nto be done to enhance the functionality of his program.  In a way,\nthis section presents us with a good lesson in futility, as Castine is\nso apt to show us—albeit inadvertently—as he begins to explore\npossible avenues of future program enhancement.  Initially, Castine’s\ndiscussions draw value from their close proximity to the current\n(i.e., completed) task.  Continued musings, however, quickly lead the\nreader further from the core foundation of the program into a\npotentially endless abyss.  Anyone of us might be able to sit and\nspeculate with a fair degree of fluency as to how this or that of a\nparticular program might be improved, but unbridled flirtations with\n“what if” scenarios, while they may certainly entertain, will probably\noffer nothing much new in the end. 4. Group III: Set Theory And Serialism (Chapter 2, Appendices A–B)",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "4.1": {
                "text": "[4.1] Chapter two, at around fifty pages, weighs in as the second\nmajor component of STO.  As a detailed discussion of set-theoretical\nand serial principles, it is also at best only peripherally related to\nthe other materials of the book, yet it offers the reader perhaps one\nof the better overviews of the topic—albeit a slightly myopic\none—that I am aware of.  The materials are not presented in any\nformal pedagogical manner—Castine opts instead for a decidedly\nhistorical perspective.  Instead, he presents the basic materials in a\nconcise and well organized descriptive manner.  Although Castine’s\ndiscussion is strongly based on the composite views of many theorists\nand composers—such as those of Milton Babbitt, George Perle, Edward\nCone, David Lewin, and Peter Westergaard—particular attention is paid\nto ideas expressed in three significant works published at the time of\nhis study: The Structure of Atonal Music by Allen Forte (1973), Basic Atonal Theory by John Rahn (1980), and Composition with\nPitch-Classes by Robert Morris (1987), hereafter referred to as CPC.\nPerhaps most importantly, Castine’s discussion is specifically limited\n(with a few exceptions) to those elements representing the core\nmaterials imbedded in CMAP, a fairly comprehensive collection, yet one\nwith significant roots in the three works cited above.  Included in\nthis chapter are the following sections: Pitches, Pitch Equivalence, and Pitch Classes Intervals, Interval Equivalence, and Interval Classes Ordered Sets, Unordered Sets, Rows, and Cycles Set Membership and Cardinality Twelve Tone Operations Properties of Unordered Sets Set Equivalence and Set Class Set Class Relations Segmentation, and Other Objections",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "4.2": {
                "text": "[4.2] Throughout these discussions, the author employs terminologies\nand formalizations as promoted by Morris in CPC.  Specifically,\nCastine feels that Morris’s notational convention “has the advantages\nthat it is as succinct and precise as any: it reflects most\ncontemporary developments in set theory; it adheres closely to\nconventions used in mathematical set theory; and has found wide\nacceptance” (p. 23).",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "4.3": {
                "text": "[4.3] Early in the chapter Castine promotes a notion that “the reader\nwill find roughly equal attention paid to both analytical and\ncompositional aspects of set theory” (p. 23); however, I found no real\nevidence to support his claim.  For the most part, the various\ndiscussions are presented clearly and without any sense of bias.  The\nchapter contains several excellent charts, such as the one summarizing\nbasic set operations; and the text is abundantly supported with\nhistorically informative footnotes.  Castine does occasionally make a\nfew problematic statements, such as regard to enharmonic spelling as\nbeing “in accord with standard conventions in atonal music” (p. 25)\n[italics are mine].  The chapter also contains a rather odd section on\n“dissonance” in post-tonal music—a topic with no direct correlation to\ntraditional set theory as espoused here.  Essentially, Castine offers\nno real insight on the topic except to conclude that “a general theory\nof dissonance (or musical tension) compatible with set theory is\nlacking” (p. 61).",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "4.4": {
                "text": "[4.4] Two related appendices are also included.  Appendix A contains a\ncomplete table for all sets of cardinalities one through twelve.  The\ninformation is presented in tabular form and contains all the basic\ninformation found in the original CMAP table for each entry: a Fortean\nset name, prime form, z-relatedness, m-relatedness, interval-class\nvector, invariance vector, and adjacent interval vector.  Perhaps more\nvaluable as a pedagogical aid is Appendix B, which contains a set of\nformal definitions and theorems for all the topics covered in chapter\ntwo. 5. Conclusions",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "5.1": {
                "text": "[5.1] It needs to be expressed again that, to evaluate the\neffectiveness and usefulness of this book, one needs to be able to see\nbeyond the dual nature of the work.  Clearly, the inclusion of two\ndistinctly different topics poses a number of organizational problems\nthat the author seems not to have been able to resolve effectively,\nleaving a bit of a schizophrenic taste in the mouth of the reader.\nEach part obviously is more successful by itself, yet the two halves\nnever really join forces.  On the other hand, when effectively\nisolated from one another, the two primary topics each can be of much\ngreater value, particularly depending on individual readers’ needs and\ninterests.",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "5.2": {
                "text": "[5.2] Perhaps most interesting to the larger theoretical audience is\nCastine’s lengthy discussion of set-theoretical issues.  He offers the\nreader a sound, well-documented historical overview that is presented\nin a clear and concise manner—yet, perhaps at times, a bit too\nobjectively, as topics such as Forte’s K/Kh relationships are\ntypically presented with no discussion of the relative merits of such\nnotions.  And, readers must be aware of the CMAP bias driving\nCastine’s discussion, particularly noting the omission of many\nrelevant theoretical concepts such as Morris’s work with contour-space\nand pitch-space, or various other authors’ work with similarity\nmeasures—all of these notions have been well established long before\nthe writing of this book.  Nonetheless, despite the problems and\nomissions of the text, chapter two perhaps could be utilized quite\neffectively as an introductory body of materials for a graduate-level\ncourse in set theory, particularly in light of the excellent reference\nmaterials presented in the appendices.  But, then again, what do we do\nwith the other five chapters?",
                "footnotes": [],
                "citations": []
            }
        },
        {
            "5.3": {
                "text": "[5.3] More problematic is the status of computer program itself.  All\nof the wonderful and creative ideas notwithstanding, a well-conceived\ninterface married to a powerful set of analytical tools is of real\nvalue only to the user of that program.  Unfortunately, much of\nCastine’s work exists only on paper.  What is coded and running lives\nup to the promise of the prose, but is still too incomplete to fulfill\nits real pledge of offering us a powerful and intuitive analytical\ntool.  As with any large undertaking such as this, the path to success\nis all too often fraught with worldly pitfalls and obligations.  Lest\nI be blamed simply for casting the first stone, let me first express\nmy sincerest hope that the programming efforts already begun will\neventually see the light of day.  I have witnessed the beginnings and\nknow that we will all benefit greatly when the end finally comes.",
                "footnotes": [],
                "citations": []
            }
        }
    ],
    "mto": true,
    "category": "review",
    "source": "mto/raw/mto.96.2.6.schaffer.html",
    "data": "mto/data/mto.96.2.6.schaffer.json"
}